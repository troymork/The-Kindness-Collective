name: Secrets Check (Social Automation)

on:
  workflow_dispatch:
    inputs:
      SAFE_MODE:
        description: "Keep SAFE_MODE on (recommended)"
        required: true
        default: "true"
      ENABLE_X:
        description: "Enable X posting?"
        required: true
        default: "false"
      ENABLE_LINKEDIN:
        description: "Enable LinkedIn posting?"
        required: true
        default: "false"
      ENABLE_INSTAGRAM:
        description: "Enable Instagram posting? (scheduler/non-Meta)"
        required: true
        default: "false"
      ENABLE_YOUTUBE:
        description: "Enable YouTube posting?"
        required: true
        default: "false"
      ENABLE_FACEBOOK:
        description: "Enable Facebook posting? (scheduler/non-Meta)"
        required: true
        default: "false"
      ENABLE_INSTAGRAM_META:
        description: "Enable Instagram via Meta Graph (direct API)?"
        required: true
        default: "false"
      ENABLE_FACEBOOK_META:
        description: "Enable Facebook via Meta Graph (direct API)?"
        required: true
        default: "false"

jobs:
  check:
    runs-on: ubuntu-latest
    env:
      # Flags can come from repo Variables or dispatch inputs; inputs override.
      SAFE_MODE: ${{ github.event.inputs.SAFE_MODE || vars.SAFE_MODE || 'true' }}
      ENABLE_X: ${{ github.event.inputs.ENABLE_X || vars.ENABLE_X || 'false' }}
      ENABLE_LINKEDIN: ${{ github.event.inputs.ENABLE_LINKEDIN || vars.ENABLE_LINKEDIN || 'false' }}
      ENABLE_INSTAGRAM: ${{ github.event.inputs.ENABLE_INSTAGRAM || vars.ENABLE_INSTAGRAM || 'false' }}
      ENABLE_YOUTUBE: ${{ github.event.inputs.ENABLE_YOUTUBE || vars.ENABLE_YOUTUBE || 'false' }}
      ENABLE_FACEBOOK: ${{ github.event.inputs.ENABLE_FACEBOOK || vars.ENABLE_FACEBOOK || 'false' }}
      ENABLE_INSTAGRAM_META: ${{ github.event.inputs.ENABLE_INSTAGRAM_META || vars.ENABLE_INSTAGRAM_META || 'false' }}
      ENABLE_FACEBOOK_META:  ${{ github.event.inputs.ENABLE_FACEBOOK_META  || vars.ENABLE_FACEBOOK_META  || 'false' }}

      # Secrets are read from repo/org Actions Secrets:
      X_BEARER_TOKEN:    ${{ secrets.X_BEARER_TOKEN }}
      LINKEDIN_TOKEN:    ${{ secrets.LINKEDIN_TOKEN }}
      IG_USER_ID:        ${{ secrets.IG_USER_ID }}
      IG_ACCESS_TOKEN:   ${{ secrets.IG_ACCESS_TOKEN }}
      FB_PAGE_ID:        ${{ secrets.FB_PAGE_ID }}
      FB_PAGE_TOKEN:     ${{ secrets.FB_PAGE_TOKEN }}
      YT_API_KEY:        ${{ secrets.YT_API_KEY }}
      # Optional scheduler webhook (Zapier/Make/n8n/etc.)
      SCHEDULER_WEBHOOK_URL: ${{ secrets.SCHEDULER_WEBHOOK_URL }}

    steps:
      - name: Show selected flags
        run: |
          echo "SAFE_MODE=$SAFE_MODE"
          echo "ENABLE_X=$ENABLE_X"
          echo "ENABLE_LINKEDIN=$ENABLE_LINKEDIN"
          echo "ENABLE_INSTAGRAM=$ENABLE_INSTAGRAM"
          echo "ENABLE_YOUTUBE=$ENABLE_YOUTUBE"
          echo "ENABLE_FACEBOOK=$ENABLE_FACEBOOK"
          echo "ENABLE_INSTAGRAM_META=$ENABLE_INSTAGRAM_META"
          echo "ENABLE_FACEBOOK_META=$ENABLE_FACEBOOK_META"

      - name: Validate secrets for enabled platforms
        run: |
          fail=0

          need() { key="$1"; val="${!1}"; if [ -z "$val" ]; then echo "::error title=Missing secret::$key not set"; fail=1; fi }

          canon_bool() { v="$(echo "$1" | tr '[:upper:]' '[:lower:]')"; [ "$v" = "true" ] && echo "true" || echo "false"; }

          ex=$(canon_bool "$ENABLE_X")
          el=$(canon_bool "$ENABLE_LINKEDIN")
          ei=$(canon_bool "$ENABLE_INSTAGRAM")
          ey=$(canon_bool "$ENABLE_YOUTUBE")
          ef=$(canon_bool "$ENABLE_FACEBOOK")
          eim=$(canon_bool "$ENABLE_INSTAGRAM_META")
          efm=$(canon_bool "$ENABLE_FACEBOOK_META")

          # X
          if [ "$ex" = "true" ]; then
            need X_BEARER_TOKEN
          fi

          # LinkedIn
          if [ "$el" = "true" ]; then
            need LINKEDIN_TOKEN
          fi

          # YouTube
          if [ "$ey" = "true" ]; then
            need YT_API_KEY
          fi

          # Instagram via Meta Graph API (direct)
          if [ "$eim" = "true" ]; then
            need IG_USER_ID
            need IG_ACCESS_TOKEN
          fi

          # Facebook via Meta Graph API (direct)
          if [ "$efm" = "true" ]; then
            need FB_PAGE_ID
            need FB_PAGE_TOKEN
          fi

          # Optional scheduler webhook (not required, but warn if any non-Meta flag is true)
          if [ "$ei" = "true" ] || [ "$ef" = "true" ]; then
            if [ -z "$SCHEDULER_WEBHOOK_URL" ]; then
              echo "::warning title=Optional scheduler webhook::SCHEDULER_WEBHOOK_URL not set; non-Meta posting will be log-only."
            fi
          fi

          if [ $fail -ne 0 ]; then
            echo "::error title=Secrets check failed::One or more required secrets are missing for enabled platforms."
            exit 1
          else
            echo "âœ… Secrets look good for the selected flags."
          fi

      - name: Reminder about SAFE_MODE
        if: ${{ env.SAFE_MODE != 'true' }}
        run: |
          echo "::warning title=SAFE_MODE is OFF::You have SAFE_MODE=false. Ensure this is a supervised/manual run."

